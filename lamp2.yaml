---
- name: Playbook to setup LAMP
  hosts: all
  become: true

  vars:
    server: "{{ '192.168.20.151' if ansible_os_family == 'RedHat' else '192.168.20.136' if ansible_os_family == 'Debian' }}"
    http_host: "example.com"
    disable_default: true
    link_sql: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
    deb_package_list:
      - apache2
      - mysql-server
      - python3-pymysql
      - php-fpm
      - php-mysql
    cent_package_list:
      - mysql-community-release-el7-5.noarch.rpm
      - httpd
      - mysql-server
      - MySQL-python
      - php
      - php-mysql
    deb_service_list:
      - ufw
      - apache2
      - mysql
    cent_service_list:
      - firewalld
      - httpd
      - mysqld
    mysql_root_password: password

  tasks:
    - name: Ubuntu primer
      apt: update_cache=yes
      when: ansible_os_family == "Debian"

    - name: CentOS primer
      get_url:
        url: '{{ link_sql }}'
        dest: .
      when: ansible_os_family == "RedHat"

    - name: Installation in Ubuntu
      package:
        name: '{{ item }}'
        state: latest
      loop: '{{ deb_package_list }}'
      when: ansible_os_family == "Debian"

    - name: Installation in CentOS
      package:
        name: '{{ item }}'
        state: latest
      loop: '{{ cent_package_list }}'
      when: ansible_os_family == "RedHat"

    - name: document root exist
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: root
        mode: '0755'

    - name: Make webpage
      template:
        src: /home/ansible/playbooks/index.php.j2
        dest: "/var/www/{{ http_host }}/index.php"

    - name: Configuration of apache server
      template:
        src: ./httpd.conf.j2
        dest: /etc/httpd/conf.d/httpd.conf
        owner: root
        group: root
        mode: '0644'
      when: ansible_os_family == "RedHat"
      notify: apache restart

    - name: Configuration of apache server
      template:
        src: ./httpd.conf.j2
        dest: /etc/apache2/sites-available/httpd.conf
        owner: root
        group: root
        mode: '0644'
      when: ansible_os_family == "Debian"
      notify: server restart

    - name: enable new site
      command: "/usr/sbin/a2ensite httpd.conf"
      when: ansible_os_family == "Debian"
      notify: reload Apache

    - name: disable default Apache site
      command: "/usr/sbin/a2dissite 000-default.conf"
      when: (disable_default) and (ansible_os_family == "Debian")
      notify: reload Apache

    - name: Start Services
      service:
        name: '{{ item }}'
        enabled: true
        state: started
      loop: '{{ deb_service_list }}'
      when: ansible_os_family == "Debian"

    - name: Start Services
      service:
        name: '{{ item }}'
        enabled: true
        state: started
      loop: '{{ cent_service_list }}'
      when: ansible_os_family == "RedHat"

    - name: MySQL pass setup
      mysql_user:
        name: ''
        user: root
        password: '{{ mysql_root_password }}'
        login_user: root
        login_password: '{{ mysql_root_password }}'
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: ansible_os_family == "Debian"

    - name: MySQL pass setup
      mysql_user:
        name: root
        login_user: root
        login_password: '{{ mysql_root_password }}'
        user: root
        check_implicit_admin: true
        password: '{{ mysql_root_password }}'
        login_unix_socket: /var/lib/mysql/mysql.sock
        host: localhost
      when: ansible_os_family == "RedHat"

    - name: Create a new database
      mysql_db:
        login_user: root
        login_password: '{{ mysql_root_password }}'
        name: mbdatabase
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock
      when: ansible_os_family == "Debian"

    - name: Create a new database
      mysql_db:
        login_user: root
        login_password: '{{ mysql_root_password }}'
        name: mbdatabase
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock
      when: ansible_os_family == "RedHat"

    - name: Add Firewall Exception
      ufw:
        rule: allow
        port: '80'
        proto: tcp
      when: ansible_os_family == "Debian"

    - name: Add Firewall Exception
      firewalld:
        port: 80/tcp
        permanent: true
        immediate: true
        state: enabled
      when: ansible_os_family == "RedHat"

  handlers:
    - name: server restart
      service:
        name: apache2
        state: restarted

    - name: apache restart
      service:
        name: httpd
        state: restarted

    - name: reload Apache
      ansible.builtin.service:
        name: apache2
        state: reloaded
